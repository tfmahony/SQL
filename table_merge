-- First, let's create each table and insert the values in them.

  CREATE TABLE target (
      id INT,
      val VARCHAR(1)
  );

  INSERT INTO target (id, val) VALUES
  (1, 'A'),
  (2, 'A'),
  (3, NULL),
  (5, 'A'),
  (8, 'A'),
  (9, NULL),
  (10, NULL);

  CREATE TABLE source (
      id INT,
      val VARCHAR(1)
  );

  INSERT INTO source (id, val) VALUES
  (1, NULL),
  (2, 'B'),
  (4, 'B'),
  (8, 'B'),
  (9, 'B'),
  (10, NULL),
  (11, NULL);

-- Now, we need to use SQL to create each result table.

-- UPDATE TABLE. I create a destination table based on the target table and then use the UPDATE command.

  CREATE TABLE update_table AS
  SELECT *
  FROM target;

  UPDATE update_table
  SET val = source.val
  FROM source
  WHERE update_table.id = source.id;

-- UPDATE NULL FILL. I use a similar UPDATE command, but I only have the NULL values updated as specified in the WHERE statement.

  CREATE TABLE update_null_fill AS
  SELECT *
  FROM target;

  UPDATE update_null_fill
  SET val = source.val
  FROM source
  WHERE update_null_fill.id = source.id AND update_null_fill.val IS NULL AND source.val IS NOT NULL;

-- UPDATE OVERRIDE. This is a very similar command to the previous, except this time I specify that values are only updated if the source value is not NULL.

  CREATE TABLE update_override AS
  SELECT *
  FROM target;

  UPDATE update_override
  SET val = source.val
  FROM source
  WHERE update_override.id = source.id AND source.val IS NOT NULL;

-- MERGE TABLE


